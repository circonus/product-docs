openapi: 3.0.2
info:
  title: IRONdb Internal APIs
  version: "0.1"
  description: >
    These APIs should not be used by humans typically. They are for IRONdb to communicate with itself, or completely unready for consumer use.
paths:
  /activate/{topohash}:
    parameters:
      - $ref: '#/components/parameters/TopoHash'
    get:
      tags:
        - State and Topology
      summary: >
        DANGER.  Changes a node to a new topology.  This should  never run by a user.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                type: object
                description: TODO
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reconstitute/{node_uuid}:
    parameters:
      -  name: node_uuid
         in: path
         required: true
         schema:
           type: string
           format: uuid
         description: >
           The UUID of the node that is requesting reconstitute information.
    get:
      tags:
        - Reconstitute
      summary: >
        Retrieves metadata needed to perform a reconstitute.
      responses:
        "200":
          description: >
            "Success."
          content:
            application/json:
              schema:
                type: object
                properties:
                  checkpoint:
                    type: string
                    example: "00000001:00000001"
                    description: >
                      A checkpoint representing the current end of the redo log for the provided node on the destination. This is used to update the jlog when the reconstitute is finished to avoid replaying duplicate data. A value of "00000000:00000000" indicates that the jlog checkpoint should not be updated.
                  metrics:
                    type: array
                    maxItems: 0
                    minItems: 0
                    description: >
                      Deprecated. Used to contain a list of metric names, will now always be empty.
                    items:
                      type: string
                      description: >
                        A metric name. Unused.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reconstitute_state:
    get:
      tags:
        - Reconstitute
      summary: >
        Returns information about whether a reconstitute is running on the snowth cluster or not.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReconstituteStateResponse"
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reconstitute_state/{node_uuid}:
    parameters:
       - name: node_uuid
         in: path
         required: true
         description: >
           The UUID of the node you with to inform the server is reconstituting.
         schema:
          type: string
          format: uuid
       - name: in_progress
         in: query
         required: true
         description: >
           A boolean value for whether you want to manually set the "reconstitute in progress" value to true or false.
         schema:
           type: boolean
           example: true
    put:
      tags:
        - Reconstitute
      summary: >
        Informs the node whether or not the node at the provided {node_uuid} is reconstituting or not.
      responses:
        "200":
          description: >
            Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /checkpoint/{node_uuid}/{jlog_checkpoint_log}/{jlog_checkpoint_marker}:
    parameters:
     - name: node_uuid
       in: path
       required: true
       schema:
         type: string
         format: uuid
       description: >
         The UUID of the node you wish to update the target's jlog for
     - name: jlog_checkpoint_log
       in: path
       required: true
       schema:
         type: string
         format: "[0-9A-Fa-f]{8}"
         example: "0123ABCD"
       description: >
         The jlog checkpoint log file you wish to update the target to
     - name: jlog_checkpoint_marker
       in: path
       required: true
       schema:
         type: string
         format: "[0-9A-Fa-f]{8}"
         example: "ABCD0123"
       description: >
         The jlog checkpoint marker within the log file you wish to update the target to
     - $ref: '#/components/parameters/X-Snowth-Update-Asynchronous'
    put:
      tags:
        - Reconstitute
      summary: >
        DANGER. This takes the redo log on a node and updates it to the position provided. This happens as part of the reconstitute process. If used improperly, it can cause data loss. It should never be run manually by a user.
      responses:
        "200":
          description: >
            "Success."
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /clean_rollup_suppressed_metrics:
    delete:
      tags:
        - Data Deletion
      summary: >
        Manually triggers a cleanup to remove metric surrogates that match the configured /snowth/raw_database/@suppress_rollup_filter and no longer have samples in the raw database.  This process is normally automatically triggered by raw shard deletion and should typically not need to be used.
      responses:
        "200":
          description: Success
          content:
            application/json:
              example: 
                message: Job triggered.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                message: Job triggered but has nothing to do because suppress_rollup_filter is not configured within IRONdb.
  /journal/{num_entries}:
    parameters:
      - name: num_entries
        in: path
        required: true
        schema:
          type: integer
          example: 50000
          minimum: 1
        description: >
          The number of distinct entries contained in the journal message.
    post:
      tags:
        - Data Submission and Repair
      summary: Submits messages to a node for processing, typically sent by other nodes' stored jlogs.  These are normally ingested data records, but can be delete messages, log messages, or lua commands as well.
      requestBody:
        content:
          application/snowth-journal:
            schema:
              type: object
              example: "<binary data>"
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: integer
                    example: 50000
                  failures:
                    type: integer
                    example: 0
                  errors:
                    type: integer
                    example: 0
        "500":
          description: >
            Some data failed to process.
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: integer
                    example: 50000
                  failures:
                    type: integer
                    example: 25000
                  errors:
                    type: integer
                    example: 25000
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /journal/tracer:
    parameters:
      - name: msg
        in: query
        required: false
        schema:
          type: string
          default: "-"
          example: "a9ba4e49-db80-4c3e-8a8d-4a766dcb2ef9"
    get:
      tags:
        - Testing
      summary: >
        Sends a message to the jlog of all nodes on the cluster, which will print the message to the error log.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  tracer:
                    type: string
                    example: "a9ba4e49-db80-4c3e-8a8d-4a766dcb2ef9"
  /rebalance/activate/{topohash}:
    parameters:
      - $ref: '#/components/parameters/TopoHash'
    post:
      tags:
        - Rebalance
      summary: >
        DANGER.  Changes a node to a new topology after a rebalance.  This should never run by a user.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                type: object
                description: TODO
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merge/histogram:
    parameters:
      - $ref: '#/components/parameters/X-Target-Topology'
    patch:
      tags:
        - Rebalance
      summary: >
        Destination endpoint for rebalance pushes of histogram data.  NOTE:  This actually uses the HTTP verb `MERGE` but OpenAPI 3 doesn't allow that as an HTTP verb.
      requestBody:
        content:
          application/x-circonus-metric-list-flatbuffer:
            schema:
              type: string
              example: "<flatbuffer>"
      responses:
        "200":
          description: Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merge/metric:
    parameters:
      - $ref: '#/components/parameters/X-Target-Topology'
    patch:
      tags:
        - Rebalance
      summary: >
        Destination endpoint for rebalance pushes of raw data.  NOTE:  This actually uses the HTTP verb `MERGE` but OpenAPI 3 doesn't allow that as an HTTP verb.
      requestBody:
        content:
          application/text:
            schema:
              type: string
              example: "M records"
      responses:
        "200":
          description: Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merge/nntbs:
    parameters:
      - $ref: '#/components/parameters/X-Target-Topology'
      - $ref: '#/components/parameters/X-Snowth-NNTBS-Activity-Data-Mode'
    patch:
      tags:
        - Rebalance
      summary: >
        Destination endpoint for rebalance pushes of numeric data.  NOTE:  This actually uses the HTTP verb `MERGE` but OpenAPI 3 doesn't allow that as an HTTP verb.
      requestBody:
        content:
          application/x-circonus-metric-list-flatbuffer:
            schema:
              type: string
              example: "<flatbuffer>"
      responses:
        "200":
          description: Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merge/surrogate:
    parameters:
      - $ref: '#/components/parameters/X-Target-Topology'
    patch:
      tags:
        - Rebalance
      summary: >
        Destination endpoint for rebalance pushes of surrogate data.  NOTE:  This actually uses the HTTP verb `MERGE` but OpenAPI 3 doesn't allow that as an HTTP verb.
      requestBody:
        content:
          application/x-circonus-metric-list-flatbuffer:
            schema:
              type: string
              example: "<flatbuffer>"
      responses:
        "200":
          description: Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /merge/text:
    parameters:
      - $ref: '#/components/parameters/X-Target-Topology'
    patch:
      tags:
        - Rebalance
      summary: >
        Destination endpoint for rebalance pushes of text data.  NOTE:  This actually uses the HTTP verb `MERGE` but OpenAPI 3 doesn't allow that as an HTTP verb.
      requestBody:
        content:
          application/x-circonus-metric-list-flatbuffer:
            schema:
              type: string
              example: "<flatbuffer>"
      responses:
        "200":
          description: Success.
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /nntbs:
    post:
      tags:
        - Data Submission and Repair
      summary: >
        Inserts data directly into the NNTBS database. It will not journal the data out to other nodes; it is the responsibility of the caller to make sure the data is correct. Generally used internally for data migration.
      requestBody:
        content:
          application/snowth-nntbs:
            schema:
              type: object
              example: "<flatbuffer>"
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FourPointResponse'
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /nntbs/reconstitute_by_shard:
    parameters:
      - $ref: '#/components/parameters/X-Topo'
      - $ref: '#/components/parameters/X-Nodes-Down'
      - name: node
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: >
          The uuid of the requesting node for which the data should be sent.
      - name: batch_size
        in: query
        required: true
        schema:
          type: integer
          minimum: 0
      - name: starting_period
        in: query
        schema:
          type: integer
          default: 0
          minimum: 0
      - name: starting_block
        in: query
        schema:
          type: integer
          minimum: 0
          default: 0
    get:
      tags:
        - Reconstitute
      summary: >
        Endpoint to request data from.  The reconstituting node will call this. 
      responses:
        "200":
          description: >
            Success.
          content:
            application/X-Circonus-NNTMerge-Flatbuffer:
              schema:
                type: string
                example: <binary>
  /raw/reconstitute/surrogate:
    parameters:
      - $ref: '#/components/parameters/X-Topo'
      - $ref: '#/components/parameters/X-Nodes-Down'
      - name: node
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: >
          The uuid of the node that is requesting raw reconstitute data
    get:
      tags:
        - Reconstitute
      summary: >
        The endpoint that a reconstituting node will access to get the required surrogate data during a reconstitute
      responses:
        "200":
          description: >
            Success.
          content:
            aapplication/X-Circonus-SurrogateDataList-Flatbuffer:
              schema:
                type: string
                example: <flatbuffer>
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /raw/reconstitute_by_shard:
    parameters:
      - $ref: '#/components/parameters/X-Topo'
      - $ref: '#/components/parameters/X-Nodes-Down'
      - name: node
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: >
          The uuid of the node that is requesting raw reconstitute data
      - name: batch_size
        in: query
        required: false
        schema:
          type: integer
          default: 500
        description: >
          The number of records to be sent back by the target node per batch.
      - name: starting_block
        in: query
        required: true
        schema:
          type: integer
          example: 1628726400
        description: >
          The starting floor of the raw shard to be reconstituted, represented in epoch seconds.
    get:
      tags:
        - Reconstitute
      summary: >
        The endpoint that a reconstituting node will access to get the required raw numeric data during a reconstitute.
      responses:
        "200":
          description: >
            Success.
          content:
            application/X-Circonus-NomDBShardMerge-Flatbuffer:
              schema:
                type: string
                example: <binary>
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /raw/text/{node_uuid}:
    parameters:
      - $ref: '#/components/parameters/ReconstituteNodeId'
      - $ref: '#/components/parameters/ReconstituteHexHash'
      - $ref: '#/components/parameters/X-Snowth-Timeout'
      - $ref: '#/components/parameters/X-Nodes-Down'
      - $ref: '#/components/parameters/X-Topo'
    get:
      tags:
        - Reconstitute
      summary: >
        Pulls down a subset of text data used during a reconstitute. Based on how the node is configured, there will be <X> number of streams to download. The hex hash specifies which one to pull.
      responses:
        "200":
          description: >
            Success.
          content:
            application/snowth-text:
              schema:
                description: >
                  A binary stream of data representing the portion of the text database requested. This binary data can be directly imported by snowth.
                type: string
                example: <binary>
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /raw/{check_uuid}/{metric_name}:
    parameters:
      - $ref: '#/components/parameters/PathCheckUUID'
      - $ref: '#/components/parameters/PathMetricName'
      - $ref: '#/components/parameters/QueryStartTs'
      - $ref: '#/components/parameters/QueryEndTs'
    get:
      tags:
        - Data Retrieval
      summary: >
        Direct fetch of raw numeric data without any processing.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NumericTuples"
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/Error'
  /histogram_raw/{check_uuid}/{metric_name}:
    parameters:
      - $ref: '#/components/parameters/PathCheckUUID'
      - $ref: '#/components/parameters/PathMetricName'
      - $ref: '#/components/parameters/QueryStartTs'
      - $ref: '#/components/parameters/QueryEndTs'
    get:
      tags:
        - Data Retrieval
      summary: >
        Direct fetch of raw histogram data without any processing.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistogramRawTuples"
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/Error'
  /histogram/{period}/{check_uuid}/{metric_name}:
    get:
      parameters:
        - $ref: '#/components/parameters/PathPeriod'
        - $ref: '#/components/parameters/PathCheckUUID'
        - $ref: '#/components/parameters/PathMetricName'
        - $ref: '#/components/parameters/QueryStartTs'
        - $ref: '#/components/parameters/QueryEndTs'
      tags:
        - Data Retrieval
      summary: >
        Direct fetch of histogram rollup data without any processing.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HistogramRollupTuples"
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      parameters:
        - $ref: '#/components/parameters/PathPeriod'
        - $ref: '#/components/parameters/PathCheckUUID'
        - $ref: '#/components/parameters/PathMetricName'
        - $ref: '#/components/parameters/QueryNumRecords'
      tags:
        - Data Submission and Repair
      summary: >
        Direct insertion of histogram rollup data without going through raw and rollup.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistogramRollupTuples'
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DirectHistogramInsertResponse"
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/text:
              schema:
                $ref: '#/components/schemas/Error'
  /ingestion:
    parameters:
      - $ref: '#/components/parameters/QueryControl'
    get:
      tags:
        - Data Submission and Repair
      summary: >
        Disable types of ingestion on the running node.
      responses:
        "200":
          description: >
            Success.
          content:
            application/json:
              schema:
                type: object
                description: The current state of any disabled ingestion.
                properties:
                  disabled:
                    type: array
                    items:
                      type: string
                      enum:
                        - raw
                        - graphite
                        - opentsdb
        default:
          description: Some sort of error occurred during the request.  The response will include information about the cause of the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    TopoHash:
      name: topohash
      in: path
      required: true
      schema:
        type: string
        format: md5
      description: >
        The hash for the topology.
    ReconstituteNodeId:
      name: node_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: >
        The UUID of the node that is requesting reconstitute information.
    ReconstituteHexHash:
      name: hex_hash
      in: query
      required: true
      schema:
        type: string
        format: hexadecimal
        example: "f"
      description: >
        A hex string that specified which portion of the data to pull. Data is pulled down in a configurable set of streams to allow concurrency. This value will pull down the data that matches the hex value provided.
    X-Snowth-Update-Asynchronous:
      name: X-Snowth-Update-Asynchronous
      in: header
      schema:
        type: integer
        minimum: 0
        maximum: 1
      example: 1
      required: false
      description: >
        Tells the snowth node if the requsted operation should be performed synchronously or asynchronously. If not specified, the action will be performed synchronously.
    X-Nodes-Down:
      name: X-Nodes-Down
      in: header
      schema:
        type: string
      description: >
        A comma-separated list of nodes in the cluster that are down. The reconstitute process will use this to determine which metrics to pull from which nodes.
    X-Target-Topology:
      name: X-Topo
      in: header
      required: true
      schema:
        type: string
      description: >
        The target topology into which data is merged.
      example: 0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef
    X-Topo:
      name: X-Topo
      in: header
      required: false
      schema:
        type: string
      description: >
        The long_topo_id of the topology the node should use for determining what data to send.   If not specified, the current topology will be used.
    X-Snowth-Separate-Raw:
      name: X-Snowth-Separate-Raw
      in: header
      required: false
      schema:
        type: integer
      description: >
        Whether or not to send raw histogram data separately. This is only relevant if the node is using histogram shards. Any positive integer value will set this to true. A value less than or equal to zero, or if the header is missing, will set it to false.
    X-Snowth-Timeout:
      name: X-Snowth-Timeout
      in: header
      required: false
      schema:
        type: string
        format: "[0-9]?(s|ms)"
      description: >
        A timeout, provided in second or milliseconds (s or ms), for how long to allow the operation to run for before timing out with an error. In not specified, there will be no timeout.
    X-Snowth-NNTBS-Activity-Data-Mode:
      name: X-Snowth-NNTBS-Activity-Data-Mode
      in: header
      required: false
      schema:
        type: string
        enum:
          - "merge"
          - "no_update"
        default: "no_update"
      description: >
        How to update the activity data using incoming NNTBS data. There are two valid fields: "merge", which will update the existing activity data by merging in information from the provided NNTBS data, and "no_update", which will not alter the activity data.
    QueryControl:
      name: control
      in: query
      schema:
        type: string
        enum:
          - raw-on
          - raw-off
          - graphite-on(todo)
          - graphite-off(todo)
          - opentsdb-on(todo)
          - opentsdb-off(todo)
          - all-on
          - all-off
      description: >
        The type of ingestion to turn on or off.  This field can be left blank to return the current state.
    PathMetricName:
      name: metric_name
      in: path
      required: true
      schema:
        type: string, url_encoded
      example: latency%7CST%5Bhost%3Aalpha4.internal%5D
      description: >
        The full [canonical metric name](https://docs.circonus.com/irondb/metric-names-tags-queries/#canonical-metric-names). 
    PathCheckUUID:
      name: check_uuid
      in: path
      required: true
      schema:
        type: string
        format: uuid
      example: 33f66a25-941f-4efe-b782-0634bb2d2d31
      description: >
        All metrics in IRONdb are partitioned under check_uuid.
    QueryStartTs:
      in: query
      name: start_ts
      required: true
      schema:
        type: number
      example: 168123145
      description: The start time (lower bound) from which to pull data, represented in seconds since the unix epoch.
    QueryEndTs:
      in: query
      name: end_ts
      required: true
      schema:
        type: number
      example: 169951854.760
      description: The end time (upper bound) from which to pull data, represented in seconds since the unix epoch.
    PathPeriod:
      in: path
      name: period
      required: true
      schema:
        type: integer
      example: 60
      description: The period, in seconds.
    QueryNumRecords:
      in: query
      name: num_records
      required: true
      schema:
        type: integer
      example: 138
      description: The number of incoming datapoints to be inserted.


  schemas:
    FourPointResponse:
      type: object
      properties:
        records:
          type: integer
          description: Total number of records seen
          example: 50000
        updated:
          type: integer
          description: Total number of local records updated
          example: 50000
        misdirected:
          type: integer
          description: Total number of records received that do not belong on the receiving node
          example: 0
        errors:
          type: integer
          description: Total number of datapoints that contain errors
          example: 0
    ReconstituteStateResponse:
      type: object
      description: Information about reconstitutes running on the snowth cluster.
      properties:
        any_in_progress:
          type: boolean
          description: Whether or not a reconstitute is running on any node in the snowth cluster.
    NumericTuples:
      type: array
      minItems: 0
      description: An array of numeric samples. The first value is the epoch timestamp in milliseconds. The second is a numeric value.
      items:
        type: array
        minItems: 1
        maxItems: 2147483647
        items:
          anyOf:
            - type: integer
            - type: object
      example: [[1380000000,1],[1380000300,2]]
    HistogramRawTuples:
      type: array
      minItems: 0
      description: An array of histogram samples. The first value is the epoch timestamp in milliseconds. The second is an object map with all of the different buckets as keys, and number of samples as values.
      items:
        type: array
        minItems: 1
        maxItems: 2147483647
        items:
          anyOf:
            - type: integer
            - type: object
      example: [[1380000000,{"1": 1,"2": 1,"3": 1,"4": 1,"5": 1}],[1380000300,{"1": 1,"2": 1,"3": 1,"4": 1,"5": 1}]]
    HistogramRollupTuples:
      type: array
      minItems: 0
      description: An array of histogram samples. The first value is the epoch timestamp in milliseconds. The second is the period in seconds. The third is an object map with all of the different buckets as keys, and number of samples as values.
      items:
        type: array
        minItems: 1
        maxItems: 2147483647
        items:
          anyOf:
            - type: integer
            - type: integer
            - type: object
      example: [[1380000000,60,{"1": 1,"2": 1,"3": 1,"4": 1,"5": 1}],[1380000300,60,{"1": 1,"2": 1,"3": 1,"4": 1,"5": 1}]]
    DirectHistogramInsertResponse:
      type: object
      properties:
        processed:
          type: integer
        discarded:
          type: integer
        errors:
          type: integer
        successes:
          type: integer
    Error:
      type: object
      properties:
        error:
          type: string
          description: A human readable description of the error.
tags:
  - name: State and Topology
  - name: Data Deletion
  - name: Data Retrieval
  - name: Data Submission and Repair
  - name: Rebalance
  - name: Reconstitute
  - name: Testing
  - name: Deprecated
    description: >
      Supported, but discouraged endpoints. 
